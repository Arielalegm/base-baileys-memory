const { conversationHistory, banUser, unbanUser, setCustomPrompt, getCustomPrompt } = require('../services/aiService');

let botActive = true;

function handleCommands(message, userId) {
    if (message.startsWith('/prompt')) {
        const parts = message.split(' ');
        if (parts.length < 2) {
            return '‚ùå Uso correcto:\n/prompt <nuevo prompt>\n√≥\n/prompt <n√∫mero> <nuevo prompt>\nEjemplo:\n/prompt Act√∫a como un experto\n√≥\n/prompt 1234567890 Act√∫a como un experto';
        }
        
        let targetNumber = userId;
        let promptIndex = 1;
        
        // Verificar si el segundo argumento es un n√∫mero de tel√©fono
        if (/^\d+$/.test(parts[1])) {
            targetNumber = parts[1];
            promptIndex = 2;
            if (parts.length < 3) {
                return '‚ùå Debes especificar un prompt despu√©s del n√∫mero de tel√©fono';
            }
        }
        
        const newPrompt = parts.slice(promptIndex).join(' ');
        setCustomPrompt(targetNumber, newPrompt);
        return `‚úÖ Nuevo prompt configurado para ${targetNumber}:\n"${newPrompt}"`;
    }

    const [command, targetNumber] = message.toLowerCase().split(' ');
    
    switch (command) {
        case '/comandos':
            return `üìù *Comandos disponibles:*

/reset - Reinicia el historial de conversaci√≥n
/reset [n√∫mero] - Reinicia el historial para un n√∫mero espec√≠fico
/pause - Pausa el bot
/play - Reactiva el bot
/ban_on [n√∫mero] - Banea a un usuario
/ban_off [n√∫mero] - Desbanea a un usuario
/prompt [texto] - Configura un nuevo prompt
/prompt [n√∫mero] [texto] - Configura un prompt para un n√∫mero espec√≠fico
/comandos - Muestra esta lista de comandos`;

        case '/reset':
            if (targetNumber) {
                conversationHistory.delete(targetNumber);
                return `üîÑ Bot reiniciado para el n√∫mero ${targetNumber}. Historial de conversaci√≥n limpiado.`;
            }
            conversationHistory.delete(userId);
            return 'üîÑ Bot reiniciado. Historial de conversaci√≥n limpiado.';
        case '/pause':
            botActive = false;
            return '‚è∏Ô∏è Bot pausado. Usa /play para reactivar.';
        case '/play':
            botActive = true;
            return '‚ñ∂Ô∏è Bot reactivado. ¬°Continuemos la conversaci√≥n!';
        case '/ban_on':
            if (!targetNumber) return '‚ùå Debes especificar un n√∫mero. Ejemplo: /ban_on 1234567890';
            banUser(targetNumber);
            return `üö´ Usuario ${targetNumber} ha sido baneado.`;
        case '/ban_off':
            if (!targetNumber) return '‚ùå Debes especificar un n√∫mero. Ejemplo: /ban_off 1234567890';
            unbanUser(targetNumber);
            return `‚úÖ Usuario ${targetNumber} ha sido desbaneado.`;
        default:
            return null;
    }
}

module.exports = {
    handleCommands,
    getBotActive: () => botActive
};
